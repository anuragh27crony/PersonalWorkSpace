<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.1 (Jython 2.7.0 on java1.8.0_101)" generated="20160916 13:39:47.367">
<suite source="C:\PCDetector_Testing\Testing\Robot" name="Robot" id="s1">
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests" name="Tests" id="s1-s1">
<kw type="setup" name="test suite setup">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${now} = BuiltIn.Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:39:50.939">${now} = 2016-09-16 13:39:50</msg>
<status endtime="20160916 13:39:50.939" starttime="20160916 13:39:50.924" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SuiteStartTime}</arg>
<arg>${now}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:39:50.955">${SuiteStartTime} = 2016-09-16 13:39:50</msg>
<status endtime="20160916 13:39:50.955" starttime="20160916 13:39:50.939" status="PASS"></status>
</kw>
<status endtime="20160916 13:39:50.986" starttime="20160916 13:39:50.924" status="PASS"></status>
</kw>
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests\10__Functional_Tests" name="Functional Tests" id="s1-s1-s1">
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests\10__Functional_Tests\00__Start_Application.txt" name="Start Application" id="s1-s1-s1-s1">
<test name="Start PC Detector Application" id="s1-s1-s1-s1-t1">
<kw type="setup" name="Test Case Setup">
<doc>Make sure that the default configuration and license are used.</doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetectorKeywords.Copy Configuration File">
<doc>Robot keyword: Replace Configuration File in installation folder with Configuration from repository</doc>
<arguments>
<arg>${Configuration_All_Streaming_Active}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:39:52.983">SourceFile:  C:\PCDetector_Testing\Testing\Resources\ConfigurationFiles\TTX_WatercastProp_AllStreaming1234.cfg
DestinationFile:  C:\civolution\Cfg\TTX_WatercastProp.cfg
FileExists value:  True</msg>
<status endtime="20160916 13:39:52.983" starttime="20160916 13:39:52.889" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Copy License File">
<doc>Robot keyword: Replace License in installation folder with license from repository</doc>
<arguments>
<arg>${License_All_Features_Active}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:39:53.014">SourceFile:  C:\PCDetector_Testing\Testing\Resources\LicenseFiles\TeletraxCVBSSVIDDetector_All_Features_Activated.lic
DestinationFile:  C:\civolution\TeletraxCVBSSVIDDetector.lic
FileExists value:  True</msg>
<status endtime="20160916 13:39:53.014" starttime="20160916 13:39:52.983" status="PASS"></status>
</kw>
<status endtime="20160916 13:39:53.030" starttime="20160916 13:39:52.889" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Start Application">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:26.624">License warning not found, no need to make it disappear</msg>
<status endtime="20160916 13:40:26.631" starttime="20160916 13:39:53.030" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:41.644">Slept 15 seconds</msg>
<status endtime="20160916 13:40:41.647" starttime="20160916 13:40:26.638" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Maximize Application Window">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:43.528">[log] CLICK on L(258,165)@S(0)[0,0 1456x963]
[log] CLICK on L(1125,166)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:40:43.541" starttime="20160916 13:40:41.651" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>default</tag>
</tags>
<status critical="yes" endtime="20160916 13:40:43.546" starttime="20160916 13:39:52.874" status="PASS"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 13:40:43.561" starttime="20160916 13:39:51.033" status="PASS"></status>
</suite>
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests\10__Functional_Tests\01__Start_and_Stop_Channels.txt" name="Start and Stop Channels" id="s1-s1-s1-s2">
<test name="Stop and Start Every Channel In Configuration, One By One" id="s1-s1-s1-s2-t1">
<kw type="setup" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:57.786">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:40:57.792" starttime="20160916 13:40:43.832" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfChannels} = PCDetectorKeywords.Number Of Channels In Configuration">
<doc></doc>
<arguments>
<arg>non-UDP</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:57.800">${NrOfChannels} = 4</msg>
<status endtime="20160916 13:40:57.800" starttime="20160916 13:40:57.797" status="PASS"></status>
</kw>
<kw type="for" name="${channel} IN RANGE [ 1 | ${NrOfChannels} + 1 ]">
<doc></doc>
<arguments>
</arguments>
<kw type="foritem" name="${channel} = 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:40:57.861">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:40:57.860" starttime="20160916 13:40:57.820" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:07.931">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:41:07.937" starttime="20160916 13:40:57.866" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:07.949">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:11.703">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:41:11.707" starttime="20160916 13:41:07.971" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:11.710">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:41:11.713">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:41:11.714">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:11.720">Comparing as boolean values</msg>
<status endtime="20160916 13:41:11.723" starttime="20160916 13:41:11.717" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:11.725">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:41:11.727" starttime="20160916 13:41:07.941" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:17.338">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:41:17.342" starttime="20160916 13:41:11.733" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:17.351">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:20.377">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:41:20.382" starttime="20160916 13:41:17.365" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:20.384">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:41:20.387">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:41:20.388">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:20.393">Comparing as boolean values</msg>
<status endtime="20160916 13:41:20.396" starttime="20160916 13:41:20.391" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:20.398">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:41:20.400" starttime="20160916 13:41:17.346" status="PASS"></status>
</kw>
<status endtime="20160916 13:41:20.403" starttime="20160916 13:40:57.810" status="PASS"></status>
</kw>
<kw type="foritem" name="${channel} = 2">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:20.456">${region} = R[16,142 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:41:20.455" starttime="20160916 13:41:20.412" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:29.752">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:41:29.755" starttime="20160916 13:41:20.460" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:29.763">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:33.142">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:41:33.144" starttime="20160916 13:41:29.776" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:33.146">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:41:33.149">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:41:33.152">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:33.159">Comparing as boolean values</msg>
<status endtime="20160916 13:41:33.163" starttime="20160916 13:41:33.156" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:33.165">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:41:33.166" starttime="20160916 13:41:29.758" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:39.131">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:41:39.135" starttime="20160916 13:41:33.169" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:39.142">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:42.172">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:41:42.175" starttime="20160916 13:41:39.155" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:42.177">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:41:42.179">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:41:42.180">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:42.184">Comparing as boolean values</msg>
<status endtime="20160916 13:41:42.187" starttime="20160916 13:41:42.182" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:42.188">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:41:42.189" starttime="20160916 13:41:39.138" status="PASS"></status>
</kw>
<status endtime="20160916 13:41:42.192" starttime="20160916 13:41:20.409" status="PASS"></status>
</kw>
<kw type="foritem" name="${channel} = 3">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:42.240">${region} = R[16,208 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:41:42.239" starttime="20160916 13:41:42.199" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:51.212">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:41:51.215" starttime="20160916 13:41:42.244" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:51.224">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:54.276">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:41:54.277" starttime="20160916 13:41:51.237" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:54.280">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:41:54.283">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:41:54.284">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:41:54.291">Comparing as boolean values</msg>
<status endtime="20160916 13:41:54.294" starttime="20160916 13:41:54.288" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:41:54.295">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:41:54.302" starttime="20160916 13:41:51.219" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:00.228">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:42:00.231" starttime="20160916 13:41:54.312" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:00.238">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:03.588">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:42:03.589" starttime="20160916 13:42:00.253" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:03.591">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:42:03.593">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:42:03.594">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:03.598">Comparing as boolean values</msg>
<status endtime="20160916 13:42:03.600" starttime="20160916 13:42:03.596" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:03.602">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:42:03.603" starttime="20160916 13:42:00.234" status="PASS"></status>
</kw>
<status endtime="20160916 13:42:03.604" starttime="20160916 13:41:42.197" status="PASS"></status>
</kw>
<kw type="foritem" name="${channel} = 4">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:03.647">${region} = R[16,274 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:42:03.645" starttime="20160916 13:42:03.607" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:12.667">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:42:12.671" starttime="20160916 13:42:03.653" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:12.677">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:15.733">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:42:15.737" starttime="20160916 13:42:12.688" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:15.738">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:42:15.741">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:42:15.742">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:15.746">Comparing as boolean values</msg>
<status endtime="20160916 13:42:15.749" starttime="20160916 13:42:15.744" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:15.750">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:42:15.751" starttime="20160916 13:42:12.673" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:21.773">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:42:21.777" starttime="20160916 13:42:15.754" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:21.783">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:25.131">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:42:25.135" starttime="20160916 13:42:21.794" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:25.139">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:42:25.143">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:42:25.144">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:25.149">Comparing as boolean values</msg>
<status endtime="20160916 13:42:25.152" starttime="20160916 13:42:25.147" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:25.154">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<status endtime="20160916 13:42:25.155" starttime="20160916 13:42:21.779" status="PASS"></status>
</kw>
<status endtime="20160916 13:42:25.157" starttime="20160916 13:42:03.605" status="PASS"></status>
</kw>
<status endtime="20160916 13:42:25.158" starttime="20160916 13:40:57.804" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>D-08055: Streaming error reported when stopping a channel and AFP streaming is enabled</tag>
<tag>known_issue</tag>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:42:25.160" starttime="20160916 13:40:43.819" status="PASS"></status>
</test>
<test name="Stop All Channels when All Channels Busy" id="s1-s1-s1-s2-t2">
<kw type="setup" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:38.324">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:42:38.331" starttime="20160916 13:42:25.177" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>All Channels Busy</arg>
</arguments>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:51.861">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:42:51.868" starttime="20160916 13:42:38.337" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:42:51.870">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:42:51.871">Precondition check on 'All Channels Busy [True]'</msg>
<msg level="INFO" timestamp="20160916 13:42:51.872">All Channels Busy</msg>
<status endtime="20160916 13:42:51.873" starttime="20160916 13:42:38.334" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:42:54.870">Warning pop-up Window found</msg>
<status endtime="20160916 13:42:54.875" starttime="20160916 13:42:51.875" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:08.002">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:43:08.008" starttime="20160916 13:42:54.879" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Stopped</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:08.017">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Stopped">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:21.602">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:43:21.606" starttime="20160916 13:43:08.022" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:43:21.607">'All Channels Stopped' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:43:21.608">Requirement check on 'All Channels Stopped [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:43:21.609">All Channels Stopped</msg>
<status endtime="20160916 13:43:21.610" starttime="20160916 13:43:08.014" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:23.977">Warning pop-up Window found</msg>
<status endtime="20160916 13:43:23.980" starttime="20160916 13:43:21.612" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Busy</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:23.995">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:37.199">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:43:37.203" starttime="20160916 13:43:23.999" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:43:37.204">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:43:37.205">Requirement check on 'All Channels Busy [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:43:37.208">All Channels Busy</msg>
<status endtime="20160916 13:43:37.213" starttime="20160916 13:43:23.991" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>D-08055: Streaming error reported when stopping a channel and AFP streaming is enabled</tag>
<tag>known_issue</tag>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:43:37.216" starttime="20160916 13:42:25.166" status="PASS"></status>
</test>
<test name="Stop All Channels when Some Channels Busy" id="s1-s1-s1-s2-t3">
<kw type="setup" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:43:50.065">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:43:50.069" starttime="20160916 13:43:37.230" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>All Channels Busy</arg>
</arguments>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:03.286">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:03.290" starttime="20160916 13:43:50.077" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:03.291">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:44:03.292">Precondition check on 'All Channels Busy [True]'</msg>
<msg level="INFO" timestamp="20160916 13:44:03.293">All Channels Busy</msg>
<status endtime="20160916 13:44:03.294" starttime="20160916 13:43:50.072" status="PASS"></status>
</kw>
<kw type="kw" name="${region} = shared_keywords.Region For Channel 2">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:03.346">${region} = R[16,142 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:44:03.345" starttime="20160916 13:44:03.306" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:06.681">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:06.683" starttime="20160916 13:44:03.349" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:06.686">${region} = R[16,142 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:44:06.685" starttime="20160916 13:44:03.298" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:15.953">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:44:15.957" starttime="20160916 13:44:06.688" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:19.293">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:19.295" starttime="20160916 13:44:15.960" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:19.317">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:22.692">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:22.695" starttime="20160916 13:44:19.328" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:22.697">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:44:22.700">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:44:22.701">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:22.705">Comparing as boolean values</msg>
<status endtime="20160916 13:44:22.707" starttime="20160916 13:44:22.702" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:22.709">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<msg level="INFO" timestamp="20160916 13:44:22.710">Channel Stopped, ${region}
        =, True, True</msg>
<status endtime="20160916 13:44:22.711" starttime="20160916 13:44:19.298" status="PASS"></status>
</kw>
<kw type="kw" name="${region} = shared_keywords.Region For Channel 4">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:22.767">${region} = R[16,274 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:44:22.766" starttime="20160916 13:44:22.719" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:26.102">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:26.105" starttime="20160916 13:44:22.770" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:26.108">${region} = R[16,274 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:44:26.107" starttime="20160916 13:44:22.714" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:34.281">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:44:34.284" starttime="20160916 13:44:26.112" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:37.620">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:37.622" starttime="20160916 13:44:34.286" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:37.628">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:40.681">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:40.684" starttime="20160916 13:44:37.642" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:40.685">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:44:40.687">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:44:40.688">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:40.691">Comparing as boolean values</msg>
<status endtime="20160916 13:44:40.693" starttime="20160916 13:44:40.689" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:44:40.694">Requirement check on 'Channel Stopped ${region} [True] = True' after 3 seconds</msg>
<msg level="INFO" timestamp="20160916 13:44:40.695">Channel Stopped, ${region}
        =, True, True</msg>
<status endtime="20160916 13:44:40.695" starttime="20160916 13:44:37.624" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:43.287">Warning pop-up Window found</msg>
<status endtime="20160916 13:44:43.290" starttime="20160916 13:44:40.697" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:56.751">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:44:56.755" starttime="20160916 13:44:43.292" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Stopped</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:44:56.767">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Stopped">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:10.344">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:45:10.348" starttime="20160916 13:44:56.775" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:45:10.349">'All Channels Stopped' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:45:10.350">Requirement check on 'All Channels Stopped [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:45:10.351">All Channels Stopped</msg>
<status endtime="20160916 13:45:10.352" starttime="20160916 13:44:56.764" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:12.367">Warning pop-up Window found</msg>
<status endtime="20160916 13:45:12.370" starttime="20160916 13:45:10.354" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Busy</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:12.381">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:25.578">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:45:25.581" starttime="20160916 13:45:12.385" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:45:25.582">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:45:25.583">Requirement check on 'All Channels Busy [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:45:25.584">All Channels Busy</msg>
<status endtime="20160916 13:45:25.587" starttime="20160916 13:45:12.373" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>D-08055: Streaming error reported when stopping a channel and AFP streaming is enabled</tag>
<tag>known_issue</tag>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:45:25.591" starttime="20160916 13:43:37.222" status="PASS"></status>
</test>
<test name="Start All Channels when Some Channels Stopped" id="s1-s1-s1-s2-t4">
<kw type="setup" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:39.072">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:45:39.075" starttime="20160916 13:45:25.601" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>All Channels Busy</arg>
</arguments>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:52.620">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:45:52.624" starttime="20160916 13:45:39.082" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:45:52.625">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:45:52.626">Precondition check on 'All Channels Busy [True]'</msg>
<msg level="INFO" timestamp="20160916 13:45:52.627">All Channels Busy</msg>
<status endtime="20160916 13:45:52.628" starttime="20160916 13:45:39.078" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Stop All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:45:54.642">Warning pop-up Window found</msg>
<status endtime="20160916 13:45:54.644" starttime="20160916 13:45:52.630" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:08.103">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:08.106" starttime="20160916 13:45:54.646" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Stopped</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:08.112">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Stopped">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:21.682">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:21.686" starttime="20160916 13:46:08.115" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:21.687">'All Channels Stopped' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:46:21.688">Requirement check on 'All Channels Stopped [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:46:21.689">All Channels Stopped</msg>
<status endtime="20160916 13:46:21.690" starttime="20160916 13:46:08.108" status="PASS"></status>
</kw>
<kw type="kw" name="${region} = shared_keywords.Region For Channel 2">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:21.732">${region} = R[16,142 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:46:21.731" starttime="20160916 13:46:21.697" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:25.069">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:25.071" starttime="20160916 13:46:21.735" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:25.077">${region} = R[16,142 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:46:25.076" starttime="20160916 13:46:21.693" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:31.003">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:46:31.006" starttime="20160916 13:46:25.079" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:31.011">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:34.035">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:34.037" starttime="20160916 13:46:31.021" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:34.039">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:46:34.041">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:46:34.042">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:34.046">Comparing as boolean values</msg>
<status endtime="20160916 13:46:34.049" starttime="20160916 13:46:34.044" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:34.050">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<msg level="INFO" timestamp="20160916 13:46:34.051">Channel Busy, ${region}
        =, True, True</msg>
<status endtime="20160916 13:46:34.052" starttime="20160916 13:46:31.008" status="PASS"></status>
</kw>
<kw type="kw" name="${region} = shared_keywords.Region For Channel 3">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:34.096">${region} = R[16,208 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:46:34.095" starttime="20160916 13:46:34.060" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:37.434">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:37.437" starttime="20160916 13:46:34.099" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:37.441">${region} = R[16,208 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:46:37.440" starttime="20160916 13:46:34.056" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:42.292">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:46:42.295" starttime="20160916 13:46:37.444" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:42.301">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:45.330">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:46:45.332" starttime="20160916 13:46:42.311" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:45.336">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:46:45.339">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:46:45.339">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:45.343">Comparing as boolean values</msg>
<status endtime="20160916 13:46:45.345" starttime="20160916 13:46:45.341" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:46:45.347">Requirement check on 'Channel Busy ${region} [True] = True' after 3 seconds</msg>
<msg level="INFO" timestamp="20160916 13:46:45.348">Channel Busy, ${region}
        =, True, True</msg>
<status endtime="20160916 13:46:45.348" starttime="20160916 13:46:42.297" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start All Channels">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:47.974">Warning pop-up Window found</msg>
<status endtime="20160916 13:46:47.977" starttime="20160916 13:46:45.351" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>All Channels Busy</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:46:47.983">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelRegion.All Channels Busy">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:01.185">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:47:01.189" starttime="20160916 13:46:47.991" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:47:01.191">'All Channels Busy' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:47:01.192">Requirement check on 'All Channels Busy [True]' after 13 seconds</msg>
<msg level="INFO" timestamp="20160916 13:47:01.193">All Channels Busy</msg>
<status endtime="20160916 13:47:01.194" starttime="20160916 13:46:47.980" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>D-08055: Streaming error reported when stopping a channel and AFP streaming is enabled</tag>
<tag>known_issue</tag>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:47:01.195" starttime="20160916 13:45:25.596" status="PASS"></status>
</test>
<test name="Start a Channel with OperationMode Idle" id="s1-s1-s1-s2-t5">
<kw type="setup" name="ChannelRegion.Confirm All Errors">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:14.676">Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active
Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:47:14.680" starttime="20160916 13:47:01.204" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Replace Configuration File">
<doc></doc>
<arguments>
<arg>${Configuration_Channel_1_Idle}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Stop PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Exit Application">
<doc></doc>
<arguments>
<arg>yes</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:19.431">[log] CLICK on L(17,29)@S(0)[0,0 1456x963]
[log] CLICK on L(122,116)@S(0)[0,0 1456x963]
[log] CLICK on L(779,517)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:47:19.442" starttime="20160916 13:47:14.687" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:34.449">Slept 15 seconds</msg>
<status endtime="20160916 13:47:34.450" starttime="20160916 13:47:19.446" status="PASS"></status>
</kw>
<status endtime="20160916 13:47:34.451" starttime="20160916 13:47:14.684" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Copy Configuration File">
<doc>Robot keyword: Replace Configuration File in installation folder with Configuration from repository</doc>
<arguments>
<arg>${filename}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:34.482">SourceFile:  C:\PCDetector_Testing\Testing\Resources\ConfigurationFiles\TTX_WatercastProp_OperationModeIdle1.cfg
DestinationFile:  C:\civolution\Cfg\TTX_WatercastProp.cfg
FileExists value:  True</msg>
<status endtime="20160916 13:47:34.482" starttime="20160916 13:47:34.451" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application After 15 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:47:49.497">Slept 15 seconds</msg>
<status endtime="20160916 13:47:49.498" starttime="20160916 13:47:34.497" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Kill PCDetector Process">
<doc></doc>
<arguments>
</arguments>
<status endtime="20160916 13:47:49.560" starttime="20160916 13:47:49.498" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:04.583">Slept 15 seconds</msg>
<status endtime="20160916 13:48:04.583" starttime="20160916 13:47:49.576" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Start Application">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:38.278">License warning not found, no need to make it disappear</msg>
<status endtime="20160916 13:48:38.282" starttime="20160916 13:48:04.583" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:53.288">Slept 15 seconds</msg>
<status endtime="20160916 13:48:53.290" starttime="20160916 13:48:38.286" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Maximize Application Window">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:55.091">[log] CLICK on L(236,143)@S(0)[0,0 1456x963]
[log] CLICK on L(1103,144)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:48:55.094" starttime="20160916 13:48:53.292" status="PASS"></status>
</kw>
<status endtime="20160916 13:48:55.096" starttime="20160916 13:48:04.583" status="PASS"></status>
</kw>
<status endtime="20160916 13:48:55.101" starttime="20160916 13:47:34.497" status="PASS"></status>
</kw>
<status endtime="20160916 13:48:55.103" starttime="20160916 13:47:14.681" status="PASS"></status>
</kw>
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:55.148">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:48:55.147" starttime="20160916 13:48:55.110" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:48:58.484">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:48:58.488" starttime="20160916 13:48:55.151" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:48:58.492">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:48:58.490" starttime="20160916 13:48:55.107" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Stopped</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelRegion.Channel Stopped">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:01.878">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:49:01.882" starttime="20160916 13:48:58.508" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:49:01.883">'Channel Stopped ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:49:01.885">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:49:01.886">Evaluating 'Channel Stopped ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:01.890">Comparing as boolean values</msg>
<status endtime="20160916 13:49:01.893" starttime="20160916 13:49:01.888" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:49:01.894">Requirement check on 'Channel Stopped ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:49:01.895">Channel Stopped, ${region}
        =, True, True</msg>
<status endtime="20160916 13:49:01.896" starttime="20160916 13:48:58.494" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Start Channel">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:07.847">Channel Confirm Error : Not active
Warning pop-up Window found</msg>
<status endtime="20160916 13:49:07.850" starttime="20160916 13:49:01.898" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Channel Busy</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelRegion.Channel Busy">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:11.208">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:49:11.211" starttime="20160916 13:49:07.862" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:49:11.212">'Channel Busy ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:49:11.219">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:49:11.221">Evaluating 'Channel Busy ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:11.225">Comparing as boolean values</msg>
<status endtime="20160916 13:49:11.228" starttime="20160916 13:49:11.223" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:49:11.229">Requirement check on 'Channel Busy ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:49:11.230">Channel Busy, ${region}
        =, True, True</msg>
<status endtime="20160916 13:49:11.231" starttime="20160916 13:49:07.852" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Replace Configuration File">
<doc></doc>
<arguments>
<arg>${Configuration_All_Streaming_Active}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Stop PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Exit Application">
<doc></doc>
<arguments>
<arg>yes</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:15.168">[log] CLICK on L(17,29)@S(0)[0,0 1456x963]
[log] CLICK on L(122,116)@S(0)[0,0 1456x963]
[log] CLICK on L(779,517)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:49:15.172" starttime="20160916 13:49:11.241" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:30.176">Slept 15 seconds</msg>
<status endtime="20160916 13:49:30.177" starttime="20160916 13:49:15.174" status="PASS"></status>
</kw>
<status endtime="20160916 13:49:30.178" starttime="20160916 13:49:11.238" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Copy Configuration File">
<doc>Robot keyword: Replace Configuration File in installation folder with Configuration from repository</doc>
<arguments>
<arg>${filename}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:30.178">SourceFile:  C:\PCDetector_Testing\Testing\Resources\ConfigurationFiles\TTX_WatercastProp_AllStreaming1234.cfg
DestinationFile:  C:\civolution\Cfg\TTX_WatercastProp.cfg
FileExists value:  True</msg>
<status endtime="20160916 13:49:30.178" starttime="20160916 13:49:30.178" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application After 15 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:49:45.195">Slept 15 seconds</msg>
<status endtime="20160916 13:49:45.197" starttime="20160916 13:49:30.194" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Kill PCDetector Process">
<doc></doc>
<arguments>
</arguments>
<status endtime="20160916 13:49:45.213" starttime="20160916 13:49:45.197" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:50:00.213">Slept 15 seconds</msg>
<status endtime="20160916 13:50:00.214" starttime="20160916 13:49:45.213" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Start Application">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:50:33.891">License warning not found, no need to make it disappear</msg>
<status endtime="20160916 13:50:33.894" starttime="20160916 13:50:00.215" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:50:48.902">Slept 15 seconds</msg>
<status endtime="20160916 13:50:48.904" starttime="20160916 13:50:33.897" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Maximize Application Window">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:50:50.716">[log] CLICK on L(214,121)@S(0)[0,0 1456x963]
[log] CLICK on L(1081,122)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:50:50.723" starttime="20160916 13:50:48.906" status="PASS"></status>
</kw>
<status endtime="20160916 13:50:50.725" starttime="20160916 13:50:00.215" status="PASS"></status>
</kw>
<status endtime="20160916 13:50:50.727" starttime="20160916 13:49:30.178" status="PASS"></status>
</kw>
<status endtime="20160916 13:50:50.728" starttime="20160916 13:49:11.233" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:50:50.729" starttime="20160916 13:47:01.200" status="PASS"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 13:50:50.740" starttime="20160916 13:40:43.590" status="PASS"></status>
</suite>
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests\10__Functional_Tests\02__Enable_and_Disable_Features.txt" name="Enable and Disable Features" id="s1-s1-s1-s3">
<kw type="setup" name="shared_keywords.Set Ceco Length">
<doc></doc>
<arguments>
<arg>${2Minutes}</arg>
</arguments>
<kw type="kw" name="${RestartRequired} = PCDetector.Set Ceco Length And Stop Application">
<doc></doc>
<arguments>
<arg>${CecoLength}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:50:57.364">Before checking the ceco
Scores 15_min_ceco=0.955172657967 and 2_min_ceco=0.911807954311 
Before finding settings area
Before finding settings input area
Before finding Dailog Button
Warning pop-up Window found</msg>
<msg level="INFO" timestamp="20160916 13:50:57.374">${RestartRequired} = True</msg>
<status endtime="20160916 13:50:57.371" starttime="20160916 13:50:50.929" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>${RestartRequired}</arg>
<arg>Start PC Detector Application After 15 Seconds</arg>
</arguments>
<kw type="kw" name="shared_keywords.Start PC Detector Application After 15 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:51:12.401">Slept 15 seconds</msg>
<status endtime="20160916 13:51:12.418" starttime="20160916 13:50:57.398" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Kill PCDetector Process">
<doc></doc>
<arguments>
</arguments>
<status endtime="20160916 13:51:12.418" starttime="20160916 13:51:12.418" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:51:27.434">Slept 15 seconds</msg>
<status endtime="20160916 13:51:27.435" starttime="20160916 13:51:12.433" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Start Application">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:00.478">License warning not found, no need to make it disappear</msg>
<status endtime="20160916 13:52:00.481" starttime="20160916 13:51:27.436" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:15.490">Slept 15 seconds</msg>
<status endtime="20160916 13:52:15.491" starttime="20160916 13:52:00.485" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Maximize Application Window">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:16.962">[log] CLICK on L(214,121)@S(0)[0,0 1456x963]
[log] CLICK on L(1081,122)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 13:52:16.963" starttime="20160916 13:52:15.494" status="PASS"></status>
</kw>
<status endtime="20160916 13:52:16.965" starttime="20160916 13:51:27.436" status="PASS"></status>
</kw>
<status endtime="20160916 13:52:16.970" starttime="20160916 13:50:57.391" status="PASS"></status>
</kw>
<status endtime="20160916 13:52:16.973" starttime="20160916 13:50:57.378" status="PASS"></status>
</kw>
<status endtime="20160916 13:52:16.975" starttime="20160916 13:50:50.923" status="PASS"></status>
</kw>
<test name="Enable Watermarking Feature Channel 1" id="s1-s1-s1-s3-t1">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:17.027">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:52:17.026" starttime="20160916 13:52:16.985" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:20.363">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:52:20.365" starttime="20160916 13:52:17.030" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:20.367">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:52:20.366" starttime="20160916 13:52:16.982" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is watermarking enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Watermarking Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:20.421" starttime="20160916 13:52:20.384" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:20.423">'is watermarking enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:20.424">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:20.425">Evaluating 'is watermarking enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:20.428">Comparing as boolean values</msg>
<status endtime="20160916 13:52:20.430" starttime="20160916 13:52:20.427" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:20.432">Precondition check on 'is watermarking enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:52:20.432">Is Watermarking Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:20.433" starttime="20160916 13:52:20.372" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Watermarking">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:23.024">Warning pop-up Window found</msg>
<status endtime="20160916 13:52:23.027" starttime="20160916 13:52:20.435" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is watermarking disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:23.032">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Watermarking Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:23.084" starttime="20160916 13:52:23.042" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:23.086">'is watermarking disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:23.088">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:23.089">Evaluating 'is watermarking disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:23.092">Comparing as boolean values</msg>
<status endtime="20160916 13:52:23.095" starttime="20160916 13:52:23.090" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:23.096">Requirement check on 'is watermarking disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:52:23.097">Is Watermarking Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:23.098" starttime="20160916 13:52:23.029" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Watermarking">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:24.615">Warning pop-up Window found</msg>
<status endtime="20160916 13:52:24.618" starttime="20160916 13:52:23.099" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is watermarking enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:24.624">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Watermarking Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:24.656" starttime="20160916 13:52:24.633" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:24.657">'is watermarking enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:24.659">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:24.660">Evaluating 'is watermarking enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:24.663">Comparing as boolean values</msg>
<status endtime="20160916 13:52:24.665" starttime="20160916 13:52:24.661" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:24.666">Requirement check on 'is watermarking enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:52:24.668">Is Watermarking Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:24.668" starttime="20160916 13:52:24.621" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:52:24.670" starttime="20160916 13:52:16.976" status="PASS"></status>
</test>
<test name="Disable VFP CECO Feature When AFP CECO is NOT Available Channel 1" id="s1-s1-s1-s3-t2">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:24.727">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:52:24.726" starttime="20160916 13:52:24.687" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:28.062">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:52:28.064" starttime="20160916 13:52:24.729" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:28.067">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:52:28.066" starttime="20160916 13:52:24.683" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:28.127" starttime="20160916 13:52:28.080" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:28.129">'is vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:28.131">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:28.132">Evaluating 'is vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:28.136">Comparing as boolean values</msg>
<status endtime="20160916 13:52:28.138" starttime="20160916 13:52:28.134" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:28.139">Precondition check on 'is vfp enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:52:28.141">Is Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:28.142" starttime="20160916 13:52:28.069" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:28.216" starttime="20160916 13:52:28.161" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:28.221">'is afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:28.224">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:28.225">Evaluating 'is afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:28.229">Comparing as boolean values</msg>
<status endtime="20160916 13:52:28.231" starttime="20160916 13:52:28.227" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:28.232">Precondition check on 'is afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:52:28.233">Is Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:28.233" starttime="20160916 13:52:28.145" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:29.739">Warning pop-up Window found</msg>
<status endtime="20160916 13:52:29.740" starttime="20160916 13:52:28.235" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is vfp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:29.745">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:52:29.796" starttime="20160916 13:52:29.758" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:29.797">'is vfp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:52:29.799">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:52:29.799">Evaluating 'is vfp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:52:29.802">Comparing as boolean values</msg>
<status endtime="20160916 13:52:29.803" starttime="20160916 13:52:29.800" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:52:29.804">Requirement check on 'is vfp disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:52:29.805">Is Vfp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:52:29.806" starttime="20160916 13:52:29.742" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCecoFiles} = shared_keywords.Generated Ceco Files For Channel 1 After 120 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:29.819">Slept 2 minutes</msg>
<status endtime="20160916 13:54:29.821" starttime="20160916 13:52:29.812" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:31.346">Latest Ceco file:  C:\civolution\Data\WcD07681609161352_01.ce</msg>
<msg level="INFO" timestamp="20160916 13:54:31.350">${NrOfFiles} = 4809</msg>
<status endtime="20160916 13:54:31.349" starttime="20160916 13:54:29.824" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:31.352">${NrOfCecoFiles} = 4809</msg>
<status endtime="20160916 13:54:31.352" starttime="20160916 13:52:29.809" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Ceco Files For Channel</arg>
<arg>1</arg>
<arg>=</arg>
<arg>${NrOfCecoFiles}</arg>
<arg>within</arg>
<arg>300 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:31.357">Interpreting '300 sec' as fixed value</msg>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:32.131">Latest Ceco file:  C:\civolution\Data\WcD07681609161352_01.ce</msg>
<status endtime="20160916 13:54:32.134" starttime="20160916 13:54:31.365" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:32.137">'Generated Ceco Files For Channel 1' is '4809'</msg>
<msg level="INFO" timestamp="20160916 13:54:32.143">Interpreting '${NrOfCecoFiles}' as fixed value '4809'</msg>
<msg level="INFO" timestamp="20160916 13:54:32.144">Evaluating 'Generated Ceco Files For Channel 1 [4809]' = '${NrOfCecoFiles} [4809]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>4809</arg>
<arg>4809</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:32.147">Comparing evaluated keyword values</msg>
<status endtime="20160916 13:54:32.151" starttime="20160916 13:54:32.145" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:32.153">Requirement check on 'Generated Ceco Files For Channel 1 [4809] = ${NrOfCecoFiles} [4809]' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:54:32.154">Generated CecoFiles For Channel, 1
        =, 4809, 4809</msg>
<status endtime="20160916 13:54:32.155" starttime="20160916 13:54:31.354" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:54:32.157" starttime="20160916 13:52:24.673" status="PASS"></status>
</test>
<test name="Enable VFP CECO Feature When AFP CECO is NOT Available Channel 1" id="s1-s1-s1-s3-t3">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:32.230">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:54:32.229" starttime="20160916 13:54:32.180" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:35.245">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:54:35.248" starttime="20160916 13:54:32.235" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:35.250">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:54:35.250" starttime="20160916 13:54:32.171" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is vfp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:54:35.285" starttime="20160916 13:54:35.261" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:35.287">'is vfp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:54:35.289">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:54:35.289">Evaluating 'is vfp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:35.293">Comparing as boolean values</msg>
<status endtime="20160916 13:54:35.295" starttime="20160916 13:54:35.291" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:35.296">Precondition check on 'is vfp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:54:35.297">Is Vfp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:54:35.298" starttime="20160916 13:54:35.252" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:54:35.335" starttime="20160916 13:54:35.313" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:35.336">'is afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:54:35.338">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:54:35.339">Evaluating 'is afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:35.345">Comparing as boolean values</msg>
<status endtime="20160916 13:54:35.347" starttime="20160916 13:54:35.342" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:35.348">Precondition check on 'is afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:54:35.349">Is Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:54:35.350" starttime="20160916 13:54:35.300" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:36.857">Warning pop-up Window found</msg>
<status endtime="20160916 13:54:36.858" starttime="20160916 13:54:35.352" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:36.863">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:54:36.900" starttime="20160916 13:54:36.873" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:36.901">'is vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:54:36.903">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:54:36.904">Evaluating 'is vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:36.907">Comparing as boolean values</msg>
<status endtime="20160916 13:54:36.912" starttime="20160916 13:54:36.905" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:36.914">Requirement check on 'is vfp enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:54:36.915">Is Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:54:36.916" starttime="20160916 13:54:36.860" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Ceco Files For Channel</arg>
<arg>1</arg>
<arg>&gt;</arg>
<arg>${NrOfCecoFiles}</arg>
<arg>within</arg>
<arg>300 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:36.922">Interpreting '300 sec' as fixed value</msg>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:37.631">Latest Ceco file:  C:\civolution\Data\WcD07681609161352_01.ce</msg>
<status endtime="20160916 13:54:37.635" starttime="20160916 13:54:36.931" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:37.636">'Generated Ceco Files For Channel 1' is '4809'</msg>
<msg level="INFO" timestamp="20160916 13:54:37.641">Generated CecoFiles For Channel, 1</msg>
<msg level="FAIL" timestamp="20160916 13:54:37.645">Non-existing variable '${NrOfCecoFiles}'.</msg>
<msg level="INFO" timestamp="20160916 13:54:37.649">Saving screenshot Enable and Disable Features-Enable VFP CECO Feature When AFP CECO is NOT Available Channel 1-generated cecofiles for channel_20160916-13h54m37.648.png</msg>
<msg level="INFO" html="yes" timestamp="20160916 13:54:37.939">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Enable and Disable Features-Enable VFP CECO Feature When AFP CECO is NOT Available Channel 1-generated cecofiles for channel_20160916-13h54m37.648.png"&gt;&lt;img src="Enable and Disable Features-Enable VFP CECO Feature When AFP CECO is NOT Available Channel 1-generated cecofiles for channel_20160916-13h54m37.648.png" width="800px"&gt;&lt;/a&gt;</msg>
<status endtime="20160916 13:54:37.647" starttime="20160916 13:54:36.918" status="FAIL"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:54:37.942" starttime="20160916 13:54:32.162" status="FAIL">Non-existing variable '${NrOfCecoFiles}'.</status>
</test>
<test name="Disable Thumbnail Capturing Feature Channel 1" id="s1-s1-s1-s3-t4">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:38.036">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:54:38.035" starttime="20160916 13:54:37.960" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:41.375">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:54:41.377" starttime="20160916 13:54:38.040" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:41.384">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:54:41.383" starttime="20160916 13:54:37.957" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is thumbnail enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Thumbnail Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:54:41.450" starttime="20160916 13:54:41.397" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:41.452">'is thumbnail enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:54:41.454">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:54:41.455">Evaluating 'is thumbnail enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:41.458">Comparing as boolean values</msg>
<status endtime="20160916 13:54:41.461" starttime="20160916 13:54:41.456" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:41.462">Precondition check on 'is thumbnail enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:54:41.463">Is Thumbnail Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:54:41.464" starttime="20160916 13:54:41.387" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Thumbnail Capturing">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:42.979">Warning pop-up Window found</msg>
<status endtime="20160916 13:54:42.981" starttime="20160916 13:54:41.466" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is thumbnail disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:42.989">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Thumbnail Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:54:43.040" starttime="20160916 13:54:42.998" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:43.042">'is thumbnail disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:54:43.044">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:54:43.045">Evaluating 'is thumbnail disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:43.052">Comparing as boolean values</msg>
<status endtime="20160916 13:54:43.055" starttime="20160916 13:54:43.047" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:43.057">Requirement check on 'is thumbnail disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:54:43.059">Is Thumbnail Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:54:43.061" starttime="20160916 13:54:42.985" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfThumbnails} = shared_keywords.Generated Thumbnails For Channel 1 After 2 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:45.074">Slept 2 seconds</msg>
<status endtime="20160916 13:54:45.076" starttime="20160916 13:54:43.070" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated Thumbnails For Channel">
<doc>Robot keyword: Get Number of Generated Thumbnails for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:54:45.335">${NrOfFiles} = 4983</msg>
<status endtime="20160916 13:54:45.335" starttime="20160916 13:54:45.078" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:54:45.341">${NrOfThumbnails} = 4983</msg>
<status endtime="20160916 13:54:45.341" starttime="20160916 13:54:43.066" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Thumbnails For Channel 1 After 300 Seconds</arg>
<arg>=</arg>
<arg>${NrOfThumbnails}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Generated Thumbnails For Channel 1 After 300 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:45.406">Slept 5 minutes</msg>
<status endtime="20160916 13:59:45.411" starttime="20160916 13:54:45.403" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated Thumbnails For Channel">
<doc>Robot keyword: Get Number of Generated Thumbnails for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:45.693">${NrOfFiles} = 4983</msg>
<status endtime="20160916 13:59:45.693" starttime="20160916 13:59:45.417" status="PASS"></status>
</kw>
<status endtime="20160916 13:59:45.697" starttime="20160916 13:54:45.398" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:45.698">'Generated Thumbnails For Channel 1 After 300 Seconds' is '4983'</msg>
<msg level="INFO" timestamp="20160916 13:59:45.700">Interpreting '${NrOfThumbnails}' as fixed value '4983'</msg>
<msg level="INFO" timestamp="20160916 13:59:45.701">Evaluating 'Generated Thumbnails For Channel 1 After 300 Seconds [4983]' = '${NrOfThumbnails} [4983]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>4983</arg>
<arg>4983</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:45.704">Comparing evaluated keyword values</msg>
<status endtime="20160916 13:59:45.706" starttime="20160916 13:59:45.703" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:45.707">Requirement check on 'Generated Thumbnails For Channel 1 After 300 Seconds [4983] = ${NrOfThumbnails} [4983]'</msg>
<msg level="INFO" timestamp="20160916 13:59:45.708">Generated Thumbnails For Channel 1 After 300 Seconds
        =, 4983, 4983</msg>
<status endtime="20160916 13:59:45.709" starttime="20160916 13:54:45.343" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 13:59:45.710" starttime="20160916 13:54:37.951" status="PASS"></status>
</test>
<test name="Enable Thumbnail Capturing Feature Channel 1" id="s1-s1-s1-s3-t5">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:45.765">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:59:45.764" starttime="20160916 13:59:45.724" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:49.099">Channel Confirm Error : Not active</msg>
<status endtime="20160916 13:59:49.100" starttime="20160916 13:59:45.768" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:49.103">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 13:59:49.102" starttime="20160916 13:59:45.717" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is thumbnail disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Thumbnail Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:59:49.137" starttime="20160916 13:59:49.114" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:49.138">'is thumbnail disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:59:49.140">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:59:49.141">Evaluating 'is thumbnail disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:49.144">Comparing as boolean values</msg>
<status endtime="20160916 13:59:49.146" starttime="20160916 13:59:49.142" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:49.147">Precondition check on 'is thumbnail disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 13:59:49.148">Is Thumbnail Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:59:49.149" starttime="20160916 13:59:49.106" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Thumbnail Capturing">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:50.655">Warning pop-up Window found</msg>
<status endtime="20160916 13:59:50.657" starttime="20160916 13:59:49.150" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is thumbnail enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:50.666">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Thumbnail Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 13:59:50.713" starttime="20160916 13:59:50.674" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:50.717">'is thumbnail enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 13:59:50.719">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 13:59:50.720">Evaluating 'is thumbnail enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:50.726">Comparing as boolean values</msg>
<status endtime="20160916 13:59:50.732" starttime="20160916 13:59:50.721" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:50.733">Requirement check on 'is thumbnail enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 13:59:50.734">Is Thumbnail Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 13:59:50.735" starttime="20160916 13:59:50.662" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfThumbnails} = shared_keywords.Generated Thumbnails For Channel 1 After 2 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:52.744">Slept 2 seconds</msg>
<status endtime="20160916 13:59:52.745" starttime="20160916 13:59:50.741" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated Thumbnails For Channel">
<doc>Robot keyword: Get Number of Generated Thumbnails for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 13:59:52.980">${NrOfFiles} = 4984</msg>
<status endtime="20160916 13:59:52.979" starttime="20160916 13:59:52.748" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 13:59:52.984">${NrOfThumbnails} = 4984</msg>
<status endtime="20160916 13:59:52.984" starttime="20160916 13:59:50.738" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Thumbnails For Channel 1 After 300 Seconds</arg>
<arg>&gt;</arg>
<arg>${NrOfThumbnails}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Generated Thumbnails For Channel 1 After 300 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:53.004">Slept 5 minutes</msg>
<status endtime="20160916 14:04:53.008" starttime="20160916 13:59:53.002" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated Thumbnails For Channel">
<doc>Robot keyword: Get Number of Generated Thumbnails for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:53.274">${NrOfFiles} = 4985</msg>
<status endtime="20160916 14:04:53.273" starttime="20160916 14:04:53.010" status="PASS"></status>
</kw>
<status endtime="20160916 14:04:53.278" starttime="20160916 13:59:52.998" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:53.279">'Generated Thumbnails For Channel 1 After 300 Seconds' is '4985'</msg>
<msg level="INFO" timestamp="20160916 14:04:53.281">Interpreting '${NrOfThumbnails}' as fixed value '4984'</msg>
<msg level="INFO" timestamp="20160916 14:04:53.282">Evaluating 'Generated Thumbnails For Channel 1 After 300 Seconds [4985]' &gt; '${NrOfThumbnails} [4984]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4985</arg>
<arg>4984</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:53.285">Comparing evaluated keyword values</msg>
<status endtime="20160916 14:04:53.287" starttime="20160916 14:04:53.283" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:53.288">Requirement check on 'Generated Thumbnails For Channel 1 After 300 Seconds [4985] &gt; ${NrOfThumbnails} [4984]'</msg>
<msg level="INFO" timestamp="20160916 14:04:53.289">Generated Thumbnails For Channel 1 After 300 Seconds
        &gt;, 4985, 4984</msg>
<status endtime="20160916 14:04:53.289" starttime="20160916 13:59:52.986" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 14:04:53.291" starttime="20160916 13:59:45.713" status="PASS"></status>
</test>
<test name="Disable Closed Captioning Feature Channel 1" id="s1-s1-s1-s3-t6">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:53.352">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 14:04:53.351" starttime="20160916 14:04:53.310" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:56.687">Channel Confirm Error : Not active</msg>
<status endtime="20160916 14:04:56.689" starttime="20160916 14:04:53.355" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:56.691">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 14:04:56.690" starttime="20160916 14:04:53.305" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is cc enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Cc Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 14:04:56.749" starttime="20160916 14:04:56.703" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:56.750">'is cc enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 14:04:56.752">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 14:04:56.753">Evaluating 'is cc enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:56.756">Comparing as boolean values</msg>
<status endtime="20160916 14:04:56.758" starttime="20160916 14:04:56.754" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:56.759">Precondition check on 'is cc enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 14:04:56.760">Is Cc Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 14:04:56.761" starttime="20160916 14:04:56.693" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Closed Captioning">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:58.300">Warning pop-up Window found</msg>
<status endtime="20160916 14:04:58.307" starttime="20160916 14:04:56.764" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is cc disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:58.313">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Cc Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 14:04:58.363" starttime="20160916 14:04:58.321" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:58.364">'is cc disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 14:04:58.366">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 14:04:58.367">Evaluating 'is cc disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:04:58.373">Comparing as boolean values</msg>
<status endtime="20160916 14:04:58.378" starttime="20160916 14:04:58.369" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:04:58.379">Requirement check on 'is cc disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 14:04:58.380">Is Cc Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 14:04:58.381" starttime="20160916 14:04:58.310" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCcFiles} = shared_keywords.Generated Closed Captioning Files For Channel 1 After 900 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:19:58.390">Slept 15 minutes</msg>
<status endtime="20160916 14:19:58.393" starttime="20160916 14:04:58.388" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated ClosedCaptioningFiles For Channel">
<doc>Robot keyword: Get Number of Generated Closed Captioning Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:19:58.649">${NrOfFiles} = 233</msg>
<status endtime="20160916 14:19:58.648" starttime="20160916 14:19:58.396" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:19:58.657">${NrOfCcFiles} = 233</msg>
<status endtime="20160916 14:19:58.656" starttime="20160916 14:04:58.384" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Closed Captioning Files For Channel 1 After 900 Seconds</arg>
<arg>=</arg>
<arg>${NrOfCcFiles}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Generated Closed Captioning Files For Channel 1 After 900 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:34:58.675">Slept 15 minutes</msg>
<status endtime="20160916 14:34:58.681" starttime="20160916 14:19:58.673" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated ClosedCaptioningFiles For Channel">
<doc>Robot keyword: Get Number of Generated Closed Captioning Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:34:58.948">${NrOfFiles} = 233</msg>
<status endtime="20160916 14:34:58.948" starttime="20160916 14:34:58.685" status="PASS"></status>
</kw>
<status endtime="20160916 14:34:58.959" starttime="20160916 14:19:58.669" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:34:58.961">'Generated Closed Captioning Files For Channel 1 After 900 Seconds' is '233'</msg>
<msg level="INFO" timestamp="20160916 14:34:58.963">Interpreting '${NrOfCcFiles}' as fixed value '233'</msg>
<msg level="INFO" timestamp="20160916 14:34:58.965">Evaluating 'Generated Closed Captioning Files For Channel 1 After 900 Seconds [233]' = '${NrOfCcFiles} [233]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>233</arg>
<arg>233</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:34:58.968">Comparing evaluated keyword values</msg>
<status endtime="20160916 14:34:58.971" starttime="20160916 14:34:58.967" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:34:58.972">Requirement check on 'Generated Closed Captioning Files For Channel 1 After 900 Seconds [233] = ${NrOfCcFiles} [233]'</msg>
<msg level="INFO" timestamp="20160916 14:34:58.972">Generated Closed Captioning Files For Channel 1 After 900 Seconds
        =, 233, 233</msg>
<status endtime="20160916 14:34:58.973" starttime="20160916 14:19:58.659" status="PASS"></status>
</kw>
<doc>Note: Make sure that the Media Player is streaming a file with Closed Captioning to the PC Detector.</doc>
<tags>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 14:34:58.975" starttime="20160916 14:04:53.294" status="PASS"></status>
</test>
<test name="Enable Closed Captioning Feature Channel 1" id="s1-s1-s1-s3-t7">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:34:59.035">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 14:34:59.034" starttime="20160916 14:34:58.989" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:35:02.369">Channel Confirm Error : Not active</msg>
<status endtime="20160916 14:35:02.370" starttime="20160916 14:34:59.037" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:35:02.373">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 14:35:02.372" starttime="20160916 14:34:58.983" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is cc disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Cc Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 14:35:02.410" starttime="20160916 14:35:02.384" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:35:02.411">'is cc disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 14:35:02.413">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 14:35:02.414">Evaluating 'is cc disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:35:02.439">Comparing as boolean values</msg>
<status endtime="20160916 14:35:02.441" starttime="20160916 14:35:02.435" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:35:02.442">Precondition check on 'is cc disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 14:35:02.443">Is Cc Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 14:35:02.444" starttime="20160916 14:35:02.375" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCcFiles} = shared_keywords.Generated Closed Captioning Files For Channel 1 After 900 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:50:02.452">Slept 15 minutes</msg>
<status endtime="20160916 14:50:02.456" starttime="20160916 14:35:02.450" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated ClosedCaptioningFiles For Channel">
<doc>Robot keyword: Get Number of Generated Closed Captioning Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:50:02.734">${NrOfFiles} = 233</msg>
<status endtime="20160916 14:50:02.732" starttime="20160916 14:50:02.459" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:50:02.741">${NrOfCcFiles} = 233</msg>
<status endtime="20160916 14:50:02.740" starttime="20160916 14:35:02.447" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Closed Captioning">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:50:04.246">Warning pop-up Window found</msg>
<status endtime="20160916 14:50:04.247" starttime="20160916 14:50:02.743" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is cc enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:50:04.252">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Cc Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 14:50:04.286" starttime="20160916 14:50:04.260" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:50:04.288">'is cc enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 14:50:04.290">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 14:50:04.290">Evaluating 'is cc enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 14:50:04.293">Comparing as boolean values</msg>
<status endtime="20160916 14:50:04.295" starttime="20160916 14:50:04.292" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 14:50:04.296">Requirement check on 'is cc enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 14:50:04.297">Is Cc Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 14:50:04.298" starttime="20160916 14:50:04.249" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Closed Captioning Files For Channel 1 After 900 Seconds</arg>
<arg>&gt;</arg>
<arg>${NrOfCcFiles}</arg>
</arguments>
<kw type="kw" name="shared_keywords.Generated Closed Captioning Files For Channel 1 After 900 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:04.320">Slept 15 minutes</msg>
<status endtime="20160916 15:05:04.324" starttime="20160916 14:50:04.318" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated ClosedCaptioningFiles For Channel">
<doc>Robot keyword: Get Number of Generated Closed Captioning Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:04.576">${NrOfFiles} = 233</msg>
<status endtime="20160916 15:05:04.574" starttime="20160916 15:05:04.328" status="PASS"></status>
</kw>
<status endtime="20160916 15:05:04.581" starttime="20160916 14:50:04.314" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:04.582">'Generated Closed Captioning Files For Channel 1 After 900 Seconds' is '233'</msg>
<msg level="INFO" timestamp="20160916 15:05:04.583">Interpreting '${NrOfCcFiles}' as fixed value '233'</msg>
<msg level="INFO" timestamp="20160916 15:05:04.584">Evaluating 'Generated Closed Captioning Files For Channel 1 After 900 Seconds [233]' &gt; '${NrOfCcFiles} [233]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>233</arg>
<arg>233</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:04.587">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:05:04.589" starttime="20160916 15:05:04.585" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:04.590">Generated Closed Captioning Files For Channel 1 After 900 Seconds
        &gt;, 233, 233</msg>
<msg level="FAIL" timestamp="20160916 15:05:04.599">CheckFailed: Requirement check on 'Generated Closed Captioning Files For Channel 1 After 900 Seconds [233] &gt; ${NrOfCcFiles} [233]'</msg>
<msg level="INFO" timestamp="20160916 15:05:04.602">Saving screenshot Enable and Disable Features-Enable Closed Captioning Feature Channel 1-_20160916-15h05m04.602.png</msg>
<msg level="INFO" html="yes" timestamp="20160916 15:05:04.824">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Enable and Disable Features-Enable Closed Captioning Feature Channel 1-_20160916-15h05m04.602.png"&gt;&lt;img src="Enable and Disable Features-Enable Closed Captioning Feature Channel 1-_20160916-15h05m04.602.png" width="800px"&gt;&lt;/a&gt;</msg>
<status endtime="20160916 15:05:04.600" starttime="20160916 14:50:04.301" status="FAIL"></status>
</kw>
<kw type="kw" name="${CcFile} = PCDetectorKeywords.Latest Closed Captioning File For Channel">
<doc>Robot keyword: Get Name of Last Closed Captioning File for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:05.136">${CcFile} = C:\civolution\Data\WcD07681609161245_01.srt</msg>
<status endtime="20160916 15:05:05.135" starttime="20160916 15:05:04.826" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Consistency Of Closed Captioning File</arg>
<arg>${CcFile}</arg>
<arg>${Verbose}</arg>
<arg>=</arg>
<arg>${OK}</arg>
</arguments>
<kw type="kw" name="closedcaptioningcheck.Consistency Of Closed Captioning File">
<doc>Robot keyword: Verify format of Closed Captioning file</doc>
<arguments>
<arg>${CcFile}</arg>
<arg>${Verbose}</arg>
</arguments>
<status endtime="20160916 15:05:05.197" starttime="20160916 15:05:05.161" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:05.199">'Consistency Of Closed Captioning File ${CcFile} ${Verbose}' is '0'</msg>
<msg level="INFO" timestamp="20160916 15:05:05.201">Interpreting '${OK}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:05:05.202">Evaluating 'Consistency Of Closed Captioning File ${CcFile} ${Verbose} [0]' = '${OK} [0]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:05.205">Comparing as integer values</msg>
<status endtime="20160916 15:05:05.213" starttime="20160916 15:05:05.203" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:05.214">Requirement check on 'Consistency Of Closed Captioning File ${CcFile} ${Verbose} [0] = ${OK} [0]'</msg>
<msg level="INFO" timestamp="20160916 15:05:05.215">Consistency Of Closed Captioning File, ${CcFile}, ${Verbose}
        =, 0, 0</msg>
<status endtime="20160916 15:05:05.216" starttime="20160916 15:05:05.149" status="PASS"></status>
</kw>
<doc>Note: Make sure that the Media Player is streaming a file with Closed Captioning to the PC Detector.</doc>
<tags>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:05:05.217" starttime="20160916 14:34:58.978" status="FAIL">CheckFailed: Requirement check on 'Generated Closed Captioning Files For Channel 1 After 900 Seconds [233] &gt; ${NrOfCcFiles} [233]'</status>
</test>
<test name="Enable VFP Streaming Feature Channel 1" id="s1-s1-s1-s3-t8">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:05.285">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:05.284" starttime="20160916 15:05:05.231" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:06.024">Channel Confirm Error : active</msg>
<status endtime="20160916 15:05:06.028" starttime="20160916 15:05:05.287" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:06.030">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:06.030" starttime="20160916 15:05:05.226" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is rt vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:06.084" starttime="20160916 15:05:06.044" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:06.085">'is rt vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:06.087">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:06.088">Evaluating 'is rt vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:06.091">Comparing as boolean values</msg>
<status endtime="20160916 15:05:06.093" starttime="20160916 15:05:06.089" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:06.094">Precondition check on 'is rt vfp enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:05:06.095">Is Rt Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:06.095" starttime="20160916 15:05:06.033" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Vfp Streaming">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:07.605">Warning pop-up Window found</msg>
<status endtime="20160916 15:05:07.606" starttime="20160916 15:05:06.097" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is rt vfp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:07.615">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Vfp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:07.664" starttime="20160916 15:05:07.623" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:07.666">'is rt vfp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:07.668">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:07.669">Evaluating 'is rt vfp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:07.672">Comparing as boolean values</msg>
<status endtime="20160916 15:05:07.674" starttime="20160916 15:05:07.670" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:07.676">Requirement check on 'is rt vfp disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:05:07.679">Is Rt Vfp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:07.681" starttime="20160916 15:05:07.608" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Vfp Streaming">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:09.189">Warning pop-up Window found</msg>
<status endtime="20160916 15:05:09.190" starttime="20160916 15:05:07.683" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is rt vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:09.195">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:09.226" starttime="20160916 15:05:09.203" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:09.228">'is rt vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:09.229">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:09.230">Evaluating 'is rt vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:09.234">Comparing as boolean values</msg>
<status endtime="20160916 15:05:09.236" starttime="20160916 15:05:09.232" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:09.237">Requirement check on 'is rt vfp enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:05:09.238">Is Rt Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:09.238" starttime="20160916 15:05:09.192" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:05:09.240" starttime="20160916 15:05:05.221" status="PASS"></status>
</test>
<test name="Enable Closed Captioning Streaming Feature Channel 1" id="s1-s1-s1-s3-t9">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:09.300">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:09.299" starttime="20160916 15:05:09.255" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:12.634">Channel Confirm Error : Not active</msg>
<status endtime="20160916 15:05:12.636" starttime="20160916 15:05:09.302" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:12.638">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:12.637" starttime="20160916 15:05:09.251" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is rt cc enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Cc Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:12.696" starttime="20160916 15:05:12.651" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:12.698">'is rt cc enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:12.700">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:12.701">Evaluating 'is rt cc enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:12.704">Comparing as boolean values</msg>
<status endtime="20160916 15:05:12.705" starttime="20160916 15:05:12.702" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:12.706">Precondition check on 'is rt cc enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:05:12.707">Is Rt Cc Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:12.708" starttime="20160916 15:05:12.640" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Cc Streaming">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:14.229">Warning pop-up Window found</msg>
<status endtime="20160916 15:05:14.232" starttime="20160916 15:05:12.709" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is rt cc disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:14.237">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Cc Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:14.293" starttime="20160916 15:05:14.247" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:14.294">'is rt cc disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:14.296">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:14.296">Evaluating 'is rt cc disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:14.299">Comparing as boolean values</msg>
<status endtime="20160916 15:05:14.301" starttime="20160916 15:05:14.298" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:14.302">Requirement check on 'is rt cc disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:05:14.303">Is Rt Cc Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:14.303" starttime="20160916 15:05:14.233" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Cc Streaming">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:15.802">Warning pop-up Window found</msg>
<status endtime="20160916 15:05:15.803" starttime="20160916 15:05:14.305" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is rt cc enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:15.808">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Cc Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:15.841" starttime="20160916 15:05:15.815" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:15.842">'is rt cc enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:15.843">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:15.844">Evaluating 'is rt cc enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:15.847">Comparing as boolean values</msg>
<status endtime="20160916 15:05:15.849" starttime="20160916 15:05:15.845" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:15.851">Requirement check on 'is rt cc enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:05:15.853">Is Rt Cc Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:15.855" starttime="20160916 15:05:15.805" status="PASS"></status>
</kw>
<doc>Note: Make sure that the Media Player is streaming a file with Closed Captioning to the PC Detector.</doc>
<tags>
<tag>osprey</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:05:15.856" starttime="20160916 15:05:09.243" status="PASS"></status>
</test>
<test name="Enable VFP CECO Feature Channel 1 for matrox" id="s1-s1-s1-s3-t10">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:15.908">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:15.907" starttime="20160916 15:05:15.868" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:19.244">Channel Confirm Error : Not active</msg>
<status endtime="20160916 15:05:19.246" starttime="20160916 15:05:15.911" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:19.248">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:05:19.248" starttime="20160916 15:05:15.864" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:19.283" starttime="20160916 15:05:19.263" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:19.285">'is vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:19.287">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:19.290">Evaluating 'is vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:19.296">Comparing as boolean values</msg>
<status endtime="20160916 15:05:19.298" starttime="20160916 15:05:19.294" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:19.299">Precondition check on 'is vfp enabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:05:19.300">Is Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:19.301" starttime="20160916 15:05:19.251" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:20.818">Warning pop-up Window found</msg>
<status endtime="20160916 15:05:20.822" starttime="20160916 15:05:19.302" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is vfp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:20.831">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:05:20.865" starttime="20160916 15:05:20.840" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:20.866">'is vfp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:05:20.868">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:05:20.869">Evaluating 'is vfp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:05:20.872">Comparing as boolean values</msg>
<status endtime="20160916 15:05:20.874" starttime="20160916 15:05:20.870" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:05:20.875">Requirement check on 'is vfp disabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:05:20.876">Is Vfp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:05:20.877" starttime="20160916 15:05:20.828" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCecoFiles} = shared_keywords.Generated Ceco Files For Channel 1 After 120 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:20.889">Slept 2 minutes</msg>
<status endtime="20160916 15:07:20.891" starttime="20160916 15:05:20.882" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:21.636">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<msg level="INFO" timestamp="20160916 15:07:21.640">${NrOfFiles} = 4845</msg>
<status endtime="20160916 15:07:21.639" starttime="20160916 15:07:20.898" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:21.642">${NrOfCecoFiles} = 4845</msg>
<status endtime="20160916 15:07:21.642" starttime="20160916 15:05:20.879" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Ceco Files For Channel</arg>
<arg>1</arg>
<arg>=</arg>
<arg>${NrOfCecoFiles}</arg>
<arg>within</arg>
<arg>300 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:21.653">Interpreting '300 sec' as fixed value</msg>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:22.387">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:22.390" starttime="20160916 15:07:21.661" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:22.391">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:22.394">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:22.394">Evaluating 'Generated Ceco Files For Channel 1 [4845]' = '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:22.398">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:22.400" starttime="20160916 15:07:22.396" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:22.401">Requirement check on 'Generated Ceco Files For Channel 1 [4845] = ${NrOfCecoFiles} [4845]' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:07:22.402">Generated CecoFiles For Channel, 1
        =, 4845, 4845</msg>
<status endtime="20160916 15:07:22.403" starttime="20160916 15:07:21.648" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCecoFiles} = PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:23.064">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<msg level="INFO" timestamp="20160916 15:07:23.068">${NrOfCecoFiles} = 4845</msg>
<status endtime="20160916 15:07:23.067" starttime="20160916 15:07:22.405" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:24.577">Warning pop-up Window found</msg>
<status endtime="20160916 15:07:24.578" starttime="20160916 15:07:23.070" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is vfp enabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
<arg>within</arg>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:24.587">Interpreting '2 sec' as fixed value</msg>
<kw type="kw" name="ChannelFeatureRegion.Is Vfp Enabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:07:24.618" starttime="20160916 15:07:24.596" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:24.620">'is vfp enabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:07:24.623">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:07:24.623">Evaluating 'is vfp enabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:24.626">Comparing as boolean values</msg>
<status endtime="20160916 15:07:24.629" starttime="20160916 15:07:24.625" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:24.629">Requirement check on 'is vfp enabled ${region} [True] = True' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:07:24.630">Is Vfp Enabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:07:24.631" starttime="20160916 15:07:24.580" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Ceco Files For Channel</arg>
<arg>1</arg>
<arg>&gt;</arg>
<arg>${NrOfCecoFiles}</arg>
<arg>within</arg>
<arg>300 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:24.635">Interpreting '300 sec' as fixed value</msg>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:25.370">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:25.373" starttime="20160916 15:07:24.644" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:25.375">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:25.377">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:25.378">Evaluating 'Generated Ceco Files For Channel 1 [4845]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:25.383">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:25.387" starttime="20160916 15:07:25.379" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:31.137">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:31.141" starttime="20160916 15:07:30.391" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:31.142">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:31.144">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:31.145">Evaluating 'Generated Ceco Files For Channel 1 [4845]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:31.148">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:31.150" starttime="20160916 15:07:31.146" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:36.882">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:36.886" starttime="20160916 15:07:36.153" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:36.887">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:36.890">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:36.891">Evaluating 'Generated Ceco Files For Channel 1 [4845]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:36.896">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:36.900" starttime="20160916 15:07:36.892" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:42.613">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:42.617" starttime="20160916 15:07:41.904" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:42.618">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:42.620">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:42.621">Evaluating 'Generated Ceco Files For Channel 1 [4845]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:42.624">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:42.626" starttime="20160916 15:07:42.622" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:48.350">Latest Ceco file:  C:\civolution\Data\WcD07681609161504_01.ce</msg>
<status endtime="20160916 15:07:48.353" starttime="20160916 15:07:47.629" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:07:48.354">'Generated Ceco Files For Channel 1' is '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:48.357">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:07:48.357">Evaluating 'Generated Ceco Files For Channel 1 [4845]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4845</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:07:48.360">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:07:48.362" starttime="20160916 15:07:48.359" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:09.819">Latest Ceco file:  C:\civolution\Data\WcD07681609161506_01.ce</msg>
<status endtime="20160916 15:08:09.822" starttime="20160916 15:08:09.101" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:09.823">'Generated Ceco Files For Channel 1' is '4846'</msg>
<msg level="INFO" timestamp="20160916 15:08:09.827">Interpreting '${NrOfCecoFiles}' as fixed value '4845'</msg>
<msg level="INFO" timestamp="20160916 15:08:09.829">Evaluating 'Generated Ceco Files For Channel 1 [4846]' &gt; '${NrOfCecoFiles} [4845]'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>4846</arg>
<arg>4845</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:09.833">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:08:09.835" starttime="20160916 15:08:09.832" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:09.837">Requirement check on 'Generated Ceco Files For Channel 1 [4846] &gt; ${NrOfCecoFiles} [4845]' after 45 seconds</msg>
<msg level="INFO" timestamp="20160916 15:08:09.838">Generated CecoFiles For Channel, 1
        &gt;, 4845, 4845
        Generated CecoFiles For Channel, 1
        &gt;, 4845, 4845
        Generated CecoFiles For Channel, 1
        &gt;, 4845, 4845
        Generated CecoFiles For Channel, 1
        &gt;, 4845, 4845
        Generated CecoFiles For Channel, 1
        &gt;, 4845, 4845
        Generated CecoFiles For Channel, 1
        &gt;, 4846, 4845</msg>
<status endtime="20160916 15:08:09.838" starttime="20160916 15:07:24.633" status="PASS"></status>
</kw>
<kw type="kw" name="${CecoFile} = PCDetectorKeywords.Latest Ceco File For Channel">
<doc>Robot keyword: Get Name of Last Ceco File for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.309">${CecoFile} = C:\civolution\Data\WcD07681609161506_01.ce</msg>
<status endtime="20160916 15:08:10.308" starttime="20160916 15:08:09.841" status="PASS"></status>
</kw>
<kw type="kw" name="${Consistency}, ${VFP_blocks}, ${AFP_blocks} = bmcecocheck.Consistency Of Ceco File">
<doc>Robot keyword: Verify format of CECO file</doc>
<arguments>
<arg>${CecoFile}</arg>
<arg>${Verbose}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.379">${Consistency} = 0</msg>
<msg level="INFO" timestamp="20160916 15:08:10.380">${VFP_blocks} = 7</msg>
<msg level="INFO" timestamp="20160916 15:08:10.382">${AFP_blocks} = 0</msg>
<status endtime="20160916 15:08:10.378" starttime="20160916 15:08:10.313" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${Consistency}</arg>
<arg>=</arg>
<arg>${OK}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.394">Interpreting '${Consistency}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.401">Interpreting '${OK}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.402">Evaluating '${Consistency} [0]' = '${OK} [0]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.405">Comparing as integer values</msg>
<status endtime="20160916 15:08:10.408" starttime="20160916 15:08:10.403" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:10.409">Requirement check on '${Consistency} [0] = ${OK} [0]'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.410">=, 0, 0</msg>
<status endtime="20160916 15:08:10.411" starttime="20160916 15:08:10.385" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${VFP_blocks}</arg>
<arg>&gt;</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.418">Interpreting '${VFP_blocks}' as fixed value '7'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.420">Interpreting '0' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:08:10.421">Evaluating '${VFP_blocks} [7]' &gt; '0'</msg>
<kw type="kw" name="CheckOperator.&gt;">
<doc>Checks whether the left side is greater than or larger than the right side [&gt;]</doc>
<arguments>
<arg>7</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.424">Comparing as integer values</msg>
<status endtime="20160916 15:08:10.433" starttime="20160916 15:08:10.422" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:10.435">Requirement check on '${VFP_blocks} [7] &gt; 0'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.436">&gt;, 7, 0</msg>
<status endtime="20160916 15:08:10.436" starttime="20160916 15:08:10.412" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${AFP_blocks}</arg>
<arg>=</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.443">Interpreting '${AFP_blocks}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.446">Interpreting '0' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:08:10.447">Evaluating '${AFP_blocks} [0]' = '0'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.450">Comparing as integer values</msg>
<status endtime="20160916 15:08:10.452" starttime="20160916 15:08:10.448" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:10.453">Requirement check on '${AFP_blocks} [0] = 0'</msg>
<msg level="INFO" timestamp="20160916 15:08:10.454">=, 0, 0</msg>
<status endtime="20160916 15:08:10.455" starttime="20160916 15:08:10.438" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:08:10.456" starttime="20160916 15:05:15.859" status="PASS"></status>
</test>
<test name="Verify AFP CECO Feature Channel 1 for matrox" id="s1-s1-s1-s3-t11">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:10.526">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:08:10.524" starttime="20160916 15:08:10.476" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:13.870">Channel Confirm Error : Not active</msg>
<status endtime="20160916 15:08:13.872" starttime="20160916 15:08:10.534" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:13.874">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:08:13.873" starttime="20160916 15:08:10.471" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:08:13.910" starttime="20160916 15:08:13.884" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:13.911">'is afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:08:13.913">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:08:13.914">Evaluating 'is afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:13.917">Comparing as boolean values</msg>
<status endtime="20160916 15:08:13.920" starttime="20160916 15:08:13.915" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:13.921">Precondition check on 'is afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:08:13.922">Is Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:08:13.923" starttime="20160916 15:08:13.876" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is rt afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:08:13.974" starttime="20160916 15:08:13.939" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:13.976">'is rt afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:08:13.978">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:08:13.978">Evaluating 'is rt afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:08:13.981">Comparing as boolean values</msg>
<status endtime="20160916 15:08:13.984" starttime="20160916 15:08:13.980" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:08:14.003">Precondition check on 'is rt afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:08:14.007">Is Rt Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:08:14.008" starttime="20160916 15:08:13.925" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfCecoFiles} = shared_keywords.Generated Ceco Files For Channel 1 After 120 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:14.017">Slept 2 minutes</msg>
<status endtime="20160916 15:10:14.023" starttime="20160916 15:08:14.015" status="PASS"></status>
</kw>
<kw type="kw" name="${NrOfFiles} = PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:14.694">Latest Ceco file:  C:\civolution\Data\WcD07681609161508_01.ce</msg>
<msg level="INFO" timestamp="20160916 15:10:14.697">${NrOfFiles} = 4847</msg>
<status endtime="20160916 15:10:14.697" starttime="20160916 15:10:14.027" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:14.700">${NrOfCecoFiles} = 4847</msg>
<status endtime="20160916 15:10:14.699" starttime="20160916 15:08:14.011" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Disable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:16.226">Warning pop-up Window found</msg>
<status endtime="20160916 15:10:16.229" starttime="20160916 15:10:14.702" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>Generated Ceco Files For Channel</arg>
<arg>1</arg>
<arg>=</arg>
<arg>${NrOfCecoFiles}</arg>
<arg>within</arg>
<arg>300 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:16.234">Interpreting '300 sec' as fixed value</msg>
<kw type="kw" name="PCDetectorKeywords.Generated CecoFiles For Channel">
<doc>Robot keyword: Get Number of Generated Ceco Files for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:16.955">Latest Ceco file:  C:\civolution\Data\WcD07681609161508_01.ce</msg>
<status endtime="20160916 15:10:16.960" starttime="20160916 15:10:16.242" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:16.961">'Generated Ceco Files For Channel 1' is '4847'</msg>
<msg level="INFO" timestamp="20160916 15:10:16.963">Interpreting '${NrOfCecoFiles}' as fixed value '4847'</msg>
<msg level="INFO" timestamp="20160916 15:10:16.964">Evaluating 'Generated Ceco Files For Channel 1 [4847]' = '${NrOfCecoFiles} [4847]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>4847</arg>
<arg>4847</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:16.967">Comparing evaluated keyword values</msg>
<status endtime="20160916 15:10:16.969" starttime="20160916 15:10:16.965" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:16.970">Requirement check on 'Generated Ceco Files For Channel 1 [4847] = ${NrOfCecoFiles} [4847]' after 0 seconds</msg>
<msg level="INFO" timestamp="20160916 15:10:16.971">Generated CecoFiles For Channel, 1
        =, 4847, 4847</msg>
<status endtime="20160916 15:10:16.971" starttime="20160916 15:10:16.231" status="PASS"></status>
</kw>
<kw type="kw" name="${CecoFile} = PCDetectorKeywords.Latest Ceco File For Channel">
<doc>Robot keyword: Get Name of Last Ceco File for a Channel</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.401">${CecoFile} = C:\civolution\Data\WcD07681609161508_01.ce</msg>
<status endtime="20160916 15:10:17.400" starttime="20160916 15:10:16.973" status="PASS"></status>
</kw>
<kw type="kw" name="${Consistency}, ${VFP_blocks}, ${AFP_blocks} = bmcecocheck.Consistency Of Ceco File">
<doc>Robot keyword: Verify format of CECO file</doc>
<arguments>
<arg>${CecoFile}</arg>
<arg>${Verbose}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.531">${Consistency} = 0</msg>
<msg level="INFO" timestamp="20160916 15:10:17.532">${VFP_blocks} = 26</msg>
<msg level="INFO" timestamp="20160916 15:10:17.533">${AFP_blocks} = 0</msg>
<status endtime="20160916 15:10:17.530" starttime="20160916 15:10:17.405" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${Consistency}</arg>
<arg>=</arg>
<arg>${OK}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.543">Interpreting '${Consistency}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.546">Interpreting '${OK}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.547">Evaluating '${Consistency} [0]' = '${OK} [0]'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.552">Comparing as integer values</msg>
<status endtime="20160916 15:10:17.557" starttime="20160916 15:10:17.550" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:17.561">Requirement check on '${Consistency} [0] = ${OK} [0]'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.563">=, 0, 0</msg>
<status endtime="20160916 15:10:17.564" starttime="20160916 15:10:17.536" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${VFP_blocks}</arg>
<arg>=</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.574">Interpreting '${VFP_blocks}' as fixed value '26'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.577">Interpreting '0' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:10:17.578">Evaluating '${VFP_blocks} [26]' = '0'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>26</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.582">Comparing as integer values</msg>
<status endtime="20160916 15:10:17.585" starttime="20160916 15:10:17.580" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:17.586">=, 26, 0</msg>
<msg level="FAIL" timestamp="20160916 15:10:17.590">CheckFailed: Requirement check on '${VFP_blocks} [26] = 0'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.596">Saving screenshot Enable and Disable Features-Verify AFP CECO Feature Channel 1 for matrox-=_20160916-15h10m17.596.png</msg>
<msg level="INFO" html="yes" timestamp="20160916 15:10:17.813">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Enable and Disable Features-Verify AFP CECO Feature Channel 1 for matrox-=_20160916-15h10m17.596.png"&gt;&lt;img src="Enable and Disable Features-Verify AFP CECO Feature Channel 1 for matrox-=_20160916-15h10m17.596.png" width="800px"&gt;&lt;/a&gt;</msg>
<status endtime="20160916 15:10:17.594" starttime="20160916 15:10:17.567" status="FAIL"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>${AFP_blocks}</arg>
<arg>=</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.819">Interpreting '${AFP_blocks}' as fixed value '0'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.822">Interpreting '0' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:10:17.824">Evaluating '${AFP_blocks} [0]' = '0'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:17.828">Comparing as integer values</msg>
<status endtime="20160916 15:10:17.830" starttime="20160916 15:10:17.827" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:17.831">Requirement check on '${AFP_blocks} [0] = 0'</msg>
<msg level="INFO" timestamp="20160916 15:10:17.832">=, 0, 0</msg>
<status endtime="20160916 15:10:17.832" starttime="20160916 15:10:17.815" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Vfp Ceco">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:19.336">Warning pop-up Window found</msg>
<status endtime="20160916 15:10:19.337" starttime="20160916 15:10:17.834" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:10:19.339" starttime="20160916 15:08:10.464" status="FAIL">CheckFailed: Requirement check on '${VFP_blocks} [26] = 0'</status>
</test>
<test name="Verify AFP Streaming Channel 1 for matrox" id="s1-s1-s1-s3-t12">
<kw type="kw" name="${region} = shared_keywords.Region For Channel 1">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${region} = ChannelRegion.Channel Region">
<doc></doc>
<arguments>
<arg>${channel}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:19.393">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:10:19.391" starttime="20160916 15:10:19.351" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelRegion.Confirm Error">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:22.739">Channel Confirm Error : Not active</msg>
<status endtime="20160916 15:10:22.751" starttime="20160916 15:10:19.398" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:22.753">${region} = R[16,76 919x63]@S(0)[0,0 1456x963] E:Y, T:3,0</msg>
<status endtime="20160916 15:10:22.753" starttime="20160916 15:10:19.348" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:10:22.806" starttime="20160916 15:10:22.770" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:22.810">'is afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:10:22.812">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:10:22.813">Evaluating 'is afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:22.816">Comparing as boolean values</msg>
<status endtime="20160916 15:10:22.818" starttime="20160916 15:10:22.814" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:22.819">Precondition check on 'is afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:10:22.820">Is Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:10:22.820" starttime="20160916 15:10:22.755" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check Precondition">
<doc>Identical to 'check that' but for use in precondition checks.</doc>
<arguments>
<arg>is rt afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:10:22.856" starttime="20160916 15:10:22.834" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:22.857">'is rt afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:10:22.861">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:10:22.863">Evaluating 'is rt afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:22.869">Comparing as boolean values</msg>
<status endtime="20160916 15:10:22.871" starttime="20160916 15:10:22.867" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:22.872">Precondition check on 'is rt afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:10:22.873">Is Rt Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:10:22.874" starttime="20160916 15:10:22.822" status="PASS"></status>
</kw>
<kw type="kw" name="ChannelFeatureRegion.Enable Afp Streaming">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:26.655">Exception in Warning popup-Window: Not Found
Warning pop-up Window is not displayed</msg>
<status endtime="20160916 15:10:26.658" starttime="20160916 15:10:22.875" status="PASS"></status>
</kw>
<kw type="kw" name="RobotChecks.Check That">
<doc>Check that is used to validate data or state from the system under test.</doc>
<arguments>
<arg>is rt afp disabled</arg>
<arg>${region}</arg>
<arg>=</arg>
<arg>True</arg>
</arguments>
<kw type="kw" name="ChannelFeatureRegion.Is Rt Afp Disabled">
<doc></doc>
<arguments>
<arg>${region}</arg>
</arguments>
<status endtime="20160916 15:10:26.690" starttime="20160916 15:10:26.671" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:26.691">'is rt afp disabled ${region}' is 'True'</msg>
<msg level="INFO" timestamp="20160916 15:10:26.693">Interpreting 'True' as fixed value</msg>
<msg level="INFO" timestamp="20160916 15:10:26.693">Evaluating 'is rt afp disabled ${region} [True]' = 'True'</msg>
<kw type="kw" name="CheckOperator.=">
<doc>Checks whether the left and right side are equal to each other [=]</doc>
<arguments>
<arg>True</arg>
<arg>True</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:26.698">Comparing as boolean values</msg>
<status endtime="20160916 15:10:26.704" starttime="20160916 15:10:26.695" status="PASS"></status>
</kw>
<msg level="INFO" timestamp="20160916 15:10:26.706">Requirement check on 'is rt afp disabled ${region} [True] = True'</msg>
<msg level="INFO" timestamp="20160916 15:10:26.706">Is Rt Afp Disabled, ${region}
        =, True, True</msg>
<status endtime="20160916 15:10:26.707" starttime="20160916 15:10:26.660" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>matrox</tag>
<tag>ospreyWithoutAudio</tag>
</tags>
<status critical="yes" endtime="20160916 15:10:26.708" starttime="20160916 15:10:19.342" status="PASS"></status>
</test>
<kw type="teardown" name="shared_keywords.Set Ceco Length">
<doc></doc>
<arguments>
<arg>${15Minutes}</arg>
</arguments>
<kw type="kw" name="${RestartRequired} = PCDetector.Set Ceco Length And Stop Application">
<doc></doc>
<arguments>
<arg>${CecoLength}</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:31.722">Before checking the ceco
Scores 15_min_ceco=0.908942461014 and 2_min_ceco=0.953793942928 
Before finding settings area
Before finding settings input area
Before finding Dailog Button
Warning pop-up Window found</msg>
<msg level="INFO" timestamp="20160916 15:10:31.726">${RestartRequired} = True</msg>
<status endtime="20160916 15:10:31.726" starttime="20160916 15:10:26.727" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>${RestartRequired}</arg>
<arg>Start PC Detector Application After 15 Seconds</arg>
</arguments>
<kw type="kw" name="shared_keywords.Start PC Detector Application After 15 Seconds">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:10:46.744">Slept 15 seconds</msg>
<status endtime="20160916 15:10:46.745" starttime="20160916 15:10:31.742" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetectorKeywords.Kill PCDetector Process">
<doc></doc>
<arguments>
</arguments>
<status endtime="20160916 15:10:46.777" starttime="20160916 15:10:46.761" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${seconds} sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:11:01.784">Slept 15 seconds</msg>
<status endtime="20160916 15:11:01.784" starttime="20160916 15:10:46.777" status="PASS"></status>
</kw>
<kw type="kw" name="shared_keywords.Start PC Detector Application">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="PCDetector.Start Application">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 15:11:35.472">License warning not found, no need to make it disappear</msg>
<status endtime="20160916 15:11:35.475" starttime="20160916 15:11:01.784" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:11:50.479">Slept 15 seconds</msg>
<status endtime="20160916 15:11:50.485" starttime="20160916 15:11:35.478" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Maximize Application Window">
<doc></doc>
<arguments>
</arguments>
<msg level="INFO" timestamp="20160916 15:11:51.956">[log] CLICK on L(214,121)@S(0)[0,0 1456x963]
[log] CLICK on L(1081,122)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 15:11:51.958" starttime="20160916 15:11:50.489" status="PASS"></status>
</kw>
<status endtime="20160916 15:11:51.959" starttime="20160916 15:11:01.784" status="PASS"></status>
</kw>
<status endtime="20160916 15:11:51.960" starttime="20160916 15:10:31.735" status="PASS"></status>
</kw>
<status endtime="20160916 15:11:51.962" starttime="20160916 15:10:31.729" status="PASS"></status>
</kw>
<status endtime="20160916 15:11:51.963" starttime="20160916 15:10:26.722" status="PASS"></status>
</kw>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 15:11:51.964" starttime="20160916 13:50:50.780" status="FAIL"></status>
</suite>
<suite source="C:\PCDetector_Testing\Testing\Robot\Tests\10__Functional_Tests\09__Stop_Application.txt" name="Stop Application" id="s1-s1-s1-s4">
<test name="Stop PC Detector Application" id="s1-s1-s1-s4-t1">
<kw type="kw" name="PCDetector.Exit Application">
<doc></doc>
<arguments>
<arg>no</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:11:56.025">[log] CLICK on L(17,29)@S(0)[0,0 1456x963]
[log] CLICK on L(122,116)@S(0)[0,0 1456x963]
[log] CLICK on L(861,519)@S(0)[0,0 1456x963]</msg>
<status endtime="20160916 15:11:56.028" starttime="20160916 15:11:52.169" status="PASS"></status>
</kw>
<kw type="kw" name="PCDetector.Close Application Window">
<doc></doc>
<arguments>
<arg>yes</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:12:02.318">Closing the application window failed
Failed to find dialog title or dialog button</msg>
<status endtime="20160916 15:12:02.321" starttime="20160916 15:11:56.030" status="PASS"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 sec</arg>
</arguments>
<msg level="INFO" timestamp="20160916 15:12:04.325">Slept 2 seconds</msg>
<status endtime="20160916 15:12:04.326" starttime="20160916 15:12:02.323" status="PASS"></status>
</kw>
<doc></doc>
<tags>
<tag>default</tag>
</tags>
<status critical="yes" endtime="20160916 15:12:04.337" starttime="20160916 15:11:52.166" status="PASS"></status>
</test>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 15:12:04.345" starttime="20160916 15:11:52.027" status="PASS"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 15:12:04.369" starttime="20160916 13:39:50.986" status="FAIL"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 15:12:04.478" starttime="20160916 13:39:50.877" status="FAIL"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status endtime="20160916 15:12:04.572" starttime="20160916 13:39:50.596" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="16" fail="3">Critical Tests</stat>
<stat pass="16" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" doc="" links="" combined="" info="">D-08055: Streaming error reported when stopping a channel and AFP streaming is enabled</stat>
<stat pass="2" fail="0" doc="" links="" combined="" info="">default</stat>
<stat pass="4" fail="0" doc="" links="" combined="" info="">known_issue</stat>
<stat pass="12" fail="2" doc="" links="" combined="" info="">matrox</stat>
<stat pass="11" fail="1" doc="" links="" combined="" info="">osprey</stat>
<stat pass="14" fail="3" doc="" links="" combined="" info="">ospreyWithoutAudio</stat>
</tag>
<suite>
<stat pass="16" fail="3" name="Robot" id="s1">Robot</stat>
<stat pass="16" fail="3" name="Tests" id="s1-s1">Robot.Tests</stat>
<stat pass="16" fail="3" name="Functional Tests" id="s1-s1-s1">Robot.Tests.Functional Tests</stat>
<stat pass="1" fail="0" name="Start Application" id="s1-s1-s1-s1">Robot.Tests.Functional Tests.Start Application</stat>
<stat pass="5" fail="0" name="Start and Stop Channels" id="s1-s1-s1-s2">Robot.Tests.Functional Tests.Start and Stop Channels</stat>
<stat pass="9" fail="3" name="Enable and Disable Features" id="s1-s1-s1-s3">Robot.Tests.Functional Tests.Enable and Disable Features</stat>
<stat pass="1" fail="0" name="Stop Application" id="s1-s1-s1-s4">Robot.Tests.Functional Tests.Stop Application</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
